<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.shoukaiseki.answerrecorder.issue.dao.ChapterDao">
  <resultMap id="BaseResultMap" type="org.shoukaiseki.answerrecorder.issue.model.Chapter">
    <result column="chapterid" jdbcType="VARCHAR" property="chapterid" />
    <result column="trainingname" jdbcType="VARCHAR" property="trainingname" />
    <result column="coursetitle" jdbcType="VARCHAR" property="coursetitle" />
    <result column="chaptername" jdbcType="VARCHAR" property="chaptername" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="createby" jdbcType="VARCHAR" property="createby" />
  </resultMap>
  
  
  <resultMap id="RelationshipResultMap" type="org.shoukaiseki.answerrecorder.issue.model.Chapter">
    <result column="chapterid" jdbcType="VARCHAR" property="chapterid" />
    <result column="trainingname" jdbcType="VARCHAR" property="trainingname" />
    <result column="coursetitle" jdbcType="VARCHAR" property="coursetitle" />
    <result column="chaptername" jdbcType="VARCHAR" property="chaptername" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="createby" jdbcType="VARCHAR" property="createby" />
	 <association property="issueList" column="chapterid"                       
            select="org.shoukaiseki.answerrecorder.issue.dao.IssueDao.findByChapterid" />
  </resultMap>
  
  <insert id="insert" parameterType="org.shoukaiseki.answerrecorder.issue.model.Chapter">
    insert into answer.chapter (chapterid, trainingname, coursetitle, 
      chaptername, createdate, createby
      )
    values (#{chapterid,jdbcType=VARCHAR}, #{trainingname,jdbcType=VARCHAR}, #{coursetitle,jdbcType=VARCHAR}, 
      #{chaptername,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{createby,jdbcType=VARCHAR}
      )
  </insert>
	
    <select id="getList" resultType="org.shoukaiseki.answerrecorder.issue.model.Chapter">
	select * from answer.chapter
    </select>

    <select id="getModelById" resultType="java.lang.String" parameterType="org.shoukaiseki.answerrecorder.issue.model.Chapter">
		select * from answer.chapter where chapterid=#{chapterid,jdbcType=VARCHAR}
    </select>
	
    <select id="getModelByOnlyLimit" resultType="org.shoukaiseki.answerrecorder.issue.model.Chapter" parameterType="org.shoukaiseki.answerrecorder.issue.model.Chapter">
		select * from answer.chapter where trainingname=#{trainingname,jdbcType=VARCHAR} and coursetitle=#{coursetitle,jdbcType=VARCHAR} and chaptername=#{chaptername,jdbcType=VARCHAR}
    </select>
	
	
    <select id="getListRelationship" resultMap="RelationshipResultMap">
		select * from answer.chapter
    </select>
	
    <select id="getCoursetitleStatisticsList" resultType="org.shoukaiseki.answerrecorder.issue.model.ChapterCoursetitleStatistics">
		
		SELECT 
		 max(chapterid) chapterid, trainingname,coursetitle,count(chaptername) chapternamecount
		FROM answer.chapter group by trainingname,coursetitle
    </select>
	
	<!--查询'培训名称'和'课程名称'对应的 所有章节-->
    <select id="getChapternameStatisticsListByTC" parameterType="java.lang.String" resultType="org.shoukaiseki.answerrecorder.issue.model.ChapterChapternameStatistics">
		
	SELECT 
		 chapterid, trainingname,coursetitle,chaptername,(select count(*) from answer.issue where chapterid=chapter.chapterid) issuecount
		FROM answer.chapter where exists(select 1 from answer.chapter t2 
	where answer.chapter.trainingname=t2.trainingname and answer.chapter.coursetitle=t2.coursetitle and chapterid=#{chapterid,jdbcType=VARCHAR})
    </select>
	
	

	<!--查询'培训名称'对应的 所有章节-->
    <select id="getChapternameStatisticsListByT" parameterType="java.lang.String" resultType="org.shoukaiseki.answerrecorder.issue.model.ChapterChapternameStatistics">
		
	SELECT 
		 chapterid, trainingname,coursetitle,chaptername,(select count(*) from answer.issue where chapterid=chapter.chapterid) issuecount
		FROM answer.chapter where exists(select 1 from answer.chapter t2 
	where answer.chapter.trainingname=t2.trainingname  and chapterid=#{chapterid,jdbcType=VARCHAR}) order by trainingname,coursetitle
    </select>

	<!--查询'培训名称'对应的 所有章节-->
    <select id="getChapternameStatisticsListAll" resultType="org.shoukaiseki.answerrecorder.issue.model.ChapterChapternameStatistics">

	    SELECT 
		 chapterid, trainingname,coursetitle,chaptername,(select count(*) from answer.issue where chapterid=chapter.chapterid) issuecount
		FROM answer.chapter order by trainingname,coursetitle
    </select>
</mapper>
